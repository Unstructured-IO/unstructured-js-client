/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../../../sdk/models/shared";
import { classToPlain, Expose, Type } from "class-transformer";

export class HTTPValidationError extends Error {
    @SpeakeasyMetadata({ elemType: shared.ValidationError })
    @Expose({ name: "detail" })
    @Type(() => shared.ValidationError)
    detail?: shared.ValidationError[];

    constructor(err?: HTTPValidationError) {
        super();
        if (err) {
            Object.assign(this, err);
            this.message = JSON.stringify(
                classToPlain(err, { exposeUnsetFields: false, excludeExtraneousValues: true })
            );
        }

        this.name = "HTTPValidationError";
        Object.setPrototypeOf(this, HTTPValidationError.prototype);
    }
}
